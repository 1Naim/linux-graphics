diff -up ./CMakeLists.txt.dma ./CMakeLists.txt
--- ./CMakeLists.txt.dma	2020-01-28 05:35:25.000000000 +1000
+++ ./CMakeLists.txt	2020-01-29 10:29:25.199187348 +1000
@@ -69,6 +69,13 @@ endmacro(glslang_pch)
 
 project(glslang)
 
+# using pkg-config to configure include paths and link libraries
+include(FindPkgConfig)
+pkg_check_modules(SPIRV_TOOLS REQUIRED SPIRV-Tools>=2019.2.1)
+if(BUILD_SHARED_LIBS)
+    pkg_check_modules(SPIRV_TOOLS_SHARED REQUIRED SPIRV-Tools-shared>=2019.2.1)
+endif(BUILD_SHARED_LIBS)
+
 if(ENABLE_CTEST)
     include(CTest)
 endif()
@@ -166,11 +173,7 @@ if(BUILD_EXTERNAL AND IS_DIRECTORY ${CMA
 	add_subdirectory(External)
 endif()
 
-if(NOT TARGET SPIRV-Tools-opt)
-    set(ENABLE_OPT OFF)
-endif()
-
-if(ENABLE_OPT)
+if(${SPIRV_TOOLS_FOUND} EQUAL 1)
     message(STATUS "optimizer enabled")
     add_definitions(-DENABLE_OPT=1)
 else()
diff -up ./External/CMakeLists.txt.dma ./External/CMakeLists.txt
--- ./External/CMakeLists.txt.dma	2020-01-28 05:35:25.000000000 +1000
+++ ./External/CMakeLists.txt	2020-01-29 10:29:25.199187348 +1000
@@ -35,10 +35,3 @@ if(BUILD_TESTING)
     endif()
 endif()
 
-if(ENABLE_OPT AND NOT TARGET SPIRV-Tools-opt)
-    if(IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/spirv-tools)
-        set(SPIRV_SKIP_TESTS ON CACHE BOOL "Skip building SPIRV-Tools tests")
-        add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/spirv-tools spirv-tools)
-    endif()
-endif()
-
diff -up ./glslang/CMakeLists.txt.dma ./glslang/CMakeLists.txt
--- ./glslang/CMakeLists.txt.dma	2020-01-28 05:35:25.000000000 +1000
+++ ./glslang/CMakeLists.txt	2020-01-29 10:29:25.199187348 +1000
@@ -79,6 +79,7 @@ set(HEADERS
     MachineIndependent/preprocessor/PpContext.h
     MachineIndependent/preprocessor/PpTokens.h)
 
+set(VERSION 7.11.3113)
 glslang_pch(SOURCES MachineIndependent/pch.cpp)
 
 add_library(glslang ${LIB_TYPE} ${BISON_GLSLParser_OUTPUT_SOURCE} ${SOURCES} ${HEADERS})
@@ -115,7 +116,9 @@ if(ENABLE_GLSLANG_INSTALL)
         install(TARGETS glslang EXPORT glslangTargets
                 ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
     endif()
-	install(EXPORT glslangTargets DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake)
+     configure_file(${CMAKE_CURRENT_SOURCE_DIR}/glslang.pc.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/pkgconfig/glslang.pc @ONLY)
+     install(FILES ${CMAKE_CURRENT_BINARY_DIR}/pkgconfig/glslang.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
+     install(EXPORT glslangTargets DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake)
 endif(ENABLE_GLSLANG_INSTALL)
 
 if(ENABLE_GLSLANG_INSTALL)
diff -up ./glslang/glslang.pc.cmake.in.dma ./glslang/glslang.pc.cmake.in
--- ./glslang/glslang.pc.cmake.in.dma	2020-01-29 10:29:25.199187348 +1000
+++ ./glslang/glslang.pc.cmake.in	2020-01-29 10:29:25.199187348 +1000
@@ -0,0 +1,11 @@
+    prefix=@CMAKE_INSTALL_PREFIX@
+    exec_prefix=@CMAKE_INSTALL_PREFIX@
+    libdir=${exec_prefix}/@CMAKE_INSTALL_LIBDIR@
+    includedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@
+    
+    Name: @PROJECT_NAME@
+    Description: OpenGL and OpenGL ES shader front end and validator
+    Requires:
+    Version: @VERSION@
+    Libs: -L${libdir} -lglslang -lOSDependent -lHLSL -lOGLCompiler -lSPVRemapper
+    Cflags: -I${includedir}
\ No newline at end of file
diff -up ./SPIRV/CMakeLists.txt.dma ./SPIRV/CMakeLists.txt
--- ./SPIRV/CMakeLists.txt.dma	2020-01-28 05:35:25.000000000 +1000
+++ ./SPIRV/CMakeLists.txt	2020-01-29 10:29:25.200187375 +1000
@@ -40,6 +40,10 @@ target_include_directories(SPIRV PUBLIC
 	$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/..>
 	$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
 
+
+set(SPIRV_NAME spirv)
+set(SPIRV_VERSION 1.3)
+
 if (ENABLE_SPVREMAPPER)
     add_library(SPVRemapper ${LIB_TYPE} ${SPVREMAP_SOURCES} ${SPVREMAP_HEADERS})
     set_property(TARGET SPVRemapper PROPERTY FOLDER glslang)
@@ -53,15 +57,21 @@ if(WIN32 AND BUILD_SHARED_LIBS)
     endif()
 endif()
 
+target_include_directories(SPIRV PUBLIC ${SPIRV_TOOLS_INCLUDE_DIRS})
+target_compile_options(SPIRV PUBLIC ${SPIRV_TOOLS_CFLAGS_OTHER})
+target_link_libraries(SPIRV ${SPIRV_TOOLS_LIBRARIES})
+if(BUILD_SHARED_LIBS)
+    target_include_directories(SPIRV PUBLIC ${SPIRV_TOOLS_SHARED_INCLUDE_DIRS})
+    target_compile_options(SPIRV PUBLIC ${SPIRV_TOOLS_SHARED_CFLAGS_OTHER})
+    target_link_libraries(SPIRV ${SPIRV_TOOLS_SHARED_LIBRARIES})
+endif(BUILD_SHARED_LIBS)
+  
 if(ENABLE_OPT)
     target_include_directories(SPIRV
         PRIVATE ${spirv-tools_SOURCE_DIR}/include
         PRIVATE ${spirv-tools_SOURCE_DIR}/source
     )
-    target_link_libraries(SPIRV glslang SPIRV-Tools-opt)
-    target_include_directories(SPIRV PUBLIC
-		$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../External>
-		$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/External>)
+    target_link_libraries(SPIRV glslang)
 else()
     target_link_libraries(SPIRV glslang)
 endif(ENABLE_OPT)
@@ -97,6 +107,9 @@ if(ENABLE_GLSLANG_INSTALL)
 
     install(EXPORT SPIRVTargets DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake)
 
+    # spirv.pc Configuration
+    configure_file(${CMAKE_CURRENT_SOURCE_DIR}/spirv.pc.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/pkgconfig/spirv.pc @ONLY)
+    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/pkgconfig/spirv.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
     install(FILES ${HEADERS} ${SPVREMAP_HEADERS} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/SPIRV/)
     install(FILES ${HEADERS} ${SPVREMAP_HEADERS} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/glslang/SPIRV/)
 endif(ENABLE_GLSLANG_INSTALL)
diff -up ./SPIRV/spirv.pc.cmake.in.dma ./SPIRV/spirv.pc.cmake.in
--- ./SPIRV/spirv.pc.cmake.in.dma	2020-01-29 10:29:25.200187375 +1000
+++ ./SPIRV/spirv.pc.cmake.in	2020-01-29 10:29:25.200187375 +1000
@@ -0,0 +1,11 @@
+    prefix=@CMAKE_INSTALL_PREFIX@
+    exec_prefix=@CMAKE_INSTALL_PREFIX@
+    libdir=${exec_prefix}/@CMAKE_INSTALL_LIBDIR@
+    includedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@
+    
+    Name: @SPIRV_NAME@
+    Description: SPIR-V is a binary intermediate language for representing graphical-shader stages and compute kernels for multiple Khronos APIs, including OpenCL, OpenGL, and Vulkan
+    Requires:
+    Version: @SPIRV_VERSION@
+    Libs: -L${libdir} -lSPIRV
+    Cflags: -I${includedir}
\ No newline at end of file
diff -up ./SPIRV/SpvTools.cpp.dma ./SPIRV/SpvTools.cpp
--- ./SPIRV/SpvTools.cpp.dma	2020-01-28 05:35:25.000000000 +1000
+++ ./SPIRV/SpvTools.cpp	2020-01-29 10:29:25.200187375 +1000
@@ -43,8 +43,8 @@
 #include <iostream>
 
 #include "SpvTools.h"
-#include "spirv-tools/optimizer.hpp"
-#include "spirv-tools/libspirv.h"
+#include <spirv-tools/optimizer.hpp>
+#include <spirv-tools/libspirv.h>
 
 namespace glslang {
 
diff -up ./StandAlone/CMakeLists.txt.dma ./StandAlone/CMakeLists.txt
--- ./StandAlone/CMakeLists.txt.dma	2020-01-29 10:29:09.052755158 +1000
+++ ./StandAlone/CMakeLists.txt	2020-01-29 10:29:25.201187402 +1000
@@ -23,6 +23,14 @@ if(ENABLE_SPVREMAPPER)
     set(LIBRARIES ${LIBRARIES} SPVRemapper)
 endif()
 
+if(BUILD_SHARED_LIBS)
+    set(LIBRARIES ${LIBRARIES} ${SPIRV_TOOLS_SHARED_LIBRARIES})
+    target_include_directories(glslangValidator PUBLIC ${SPIRV_TOOLS_SHARED_INCLUDE_DIRS})
+else()
+    set(LIBRARIES ${LIBRARIES} ${SPIRV_TOOLS_LIBRARIES})
+    target_include_directories(glslangValidator PUBLIC ${SPIRV_TOOLS_INCLUDE_DIRS})
+endif(BUILD_SHARED_LIBS)
+
 if(WIN32)
     set(LIBRARIES ${LIBRARIES} psapi)
 elseif(UNIX)
@@ -32,9 +40,6 @@ elseif(UNIX)
 endif(WIN32)
 
 target_link_libraries(glslangValidator ${LIBRARIES})
-target_include_directories(glslangValidator PUBLIC
-    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../External>
-    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/External>)
 
 if(ENABLE_SPVREMAPPER)
     set(REMAPPER_SOURCES spirv-remap.cpp)
